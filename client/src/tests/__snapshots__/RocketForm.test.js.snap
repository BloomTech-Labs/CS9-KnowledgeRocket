// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<RocketForm /> renders correctly 1`] = `
.c0 {
  font-family: 'Roboto',serif;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-box-pack: start;
  -webkit-justify-content: flex-start;
  -ms-flex-pack: start;
  justify-content: flex-start;
  -webkit-align-items: flex-start;
  -webkit-box-align: flex-start;
  -ms-flex-align: flex-start;
  align-items: flex-start;
}

.c0 label {
  padding: .25rem;
  font-weight: bold;
  font-size: 1.3rem;
  margin-bottom: .5rem;
}

.c0 .requiredFields {
  color: red;
  margin-bottom: .5rem;
}

.c0 input[name="title"] {
  border: 0.5px solid #A9A9A9;
  width: 50%;
  min-height: 2rem;
  border-radius: 0.25rem;
  padding: .25rem;
}

.c3 {
  width: 100%;
  min-height: 4rem;
  border-radius: 0.25rem;
  padding: .25rem;
}

.c2 {
  width: 100%;
  min-height: 4rem;
  border-radius: 0.25rem;
  padding: .25rem;
  margin: 1rem 0;
  text-align: justify;
  font-size: 1.1rem;
}

.c4 {
  display: grid;
  grid-template-columns: 1fr 1fr;
  grid-template-rows: 1fr 1fr;
  width: 100%;
}

.c4 input[type="text"] {
  border-radius: 0.25rem;
  border: 0.5px solid #A9A9A9;
  width: 91%;
  min-height: 2rem;
  padding: .25rem .5rem;
  margin: .25rem;
}

.c4 input[type="radio"] {
  padding: .25rem;
}

.c1 {
  color: red;
  font-size: .8rem;
  height: 1rem;
  margin-bottom: 1rem;
}

@media (max-width:600px) {
  .c4 {
    grid-template-columns: 1fr;
    grid-template-rows: 1fr;
  }
}

<form
  onSubmit={[Function]}
>
  <div
    className="c0"
  >
    <label
      htmlFor="title"
    />
    <input
      name="title"
      onChange={[Function]}
      placeholder="Title"
      value=""
    />
    <div
      className="c1"
    />
  </div>
  <div
    className="c0"
  >
    <p
      className="c2"
    >
      Knowledge rockets are short paragraphs followed by a multiple choice question. These are automatically sent two days, two weeks, and two months after a lesson is taught and are intended to cause the student to recall what they have learned. The rockets should not be used to provide exhaustive review. Instead, they ask the student to "reload" the mental maps that acquired during the lesson.
    </p>
  </div>
  <section>
    <div
      className="c0"
    >
      <label
        htmlFor="td.explanation"
      >
        Two Days - Review Text
      </label>
      <textarea
        aria-describedby="td-explanation-ErrorDescription"
        className="c3"
        name="td.explanation"
        onChange={[Function]}
        placeholder="Two Day Review Text"
        value=""
      />
      <div
        className="c1"
        id="td-explanation-ErrorDescription"
      />
    </div>
    <div
      className="c0"
    >
      <label
        htmlFor="td.question"
      >
        Two Days - Review Question
      </label>
      <textarea
        aria-describedby="td-question-ErrorDescription"
        className="c3"
        name="td.question"
        onChange={[Function]}
        placeholder="Two Day Review Text"
        value=""
      />
      <div
        className="c1"
        id="td-question-ErrorDescription"
      />
    </div>
    <div
      className="c4"
    >
      <label>
        <input
          aria-describedby="td-correct-ErrorDescription"
          checked={true}
          name="td.correct"
          onBlur={[Function]}
          onChange={[Function]}
          type="radio"
          value={0}
        />
        <input
          name="td.choices[0].text"
          onChange={[Function]}
          placeholder="Answer 1"
          type="text"
          value=""
        />
        <div
          className="c1"
          id="td-choices[0].text-ErrorDescription"
        />
      </label>
      <label>
        <input
          aria-describedby="td-correct-ErrorDescription"
          checked={false}
          name="td.correct"
          onBlur={[Function]}
          onChange={[Function]}
          type="radio"
          value={1}
        />
        <input
          name="td.choices[1].text"
          onChange={[Function]}
          placeholder="Answer 2"
          type="text"
          value=""
        />
        <div
          className="c1"
          id="td-choices[1].text-ErrorDescription"
        />
      </label>
      <label>
        <input
          aria-describedby="td-correct-ErrorDescription"
          checked={false}
          name="td.correct"
          onBlur={[Function]}
          onChange={[Function]}
          type="radio"
          value={2}
        />
        <input
          name="td.choices[2].text"
          onChange={[Function]}
          placeholder="Answer 3"
          type="text"
          value=""
        />
        <div
          className="c1"
          id="td-choices[2].text-ErrorDescription"
        />
      </label>
      <label>
        <input
          aria-describedby="td-correct-ErrorDescription"
          checked={false}
          name="td.correct"
          onBlur={[Function]}
          onChange={[Function]}
          type="radio"
          value={3}
        />
        <input
          name="td.choices[3].text"
          onChange={[Function]}
          placeholder="Answer 4"
          type="text"
          value=""
        />
        <div
          className="c1"
          id="td-choices[3].text-ErrorDescription"
        />
      </label>
    </div>
    <div
      className="c1"
      id="td-correct-ErrorDescription"
    />
  </section>
  <section>
    <div
      className="c0"
    >
      <label
        htmlFor="tw.explanation"
      >
        Two Weeks - Review Text
      </label>
      <textarea
        aria-describedby="tw-explanation-ErrorDescription"
        className="c3"
        name="tw.explanation"
        onChange={[Function]}
        placeholder="Two Day Review Text"
        value=""
      />
      <div
        className="c1"
        id="tw-explanation-ErrorDescription"
      />
    </div>
    <div
      className="c0"
    >
      <label
        htmlFor="tw.question"
      >
        Two Weeks - Review Question
      </label>
      <textarea
        aria-describedby="tw-question-ErrorDescription"
        className="c3"
        name="tw.question"
        onChange={[Function]}
        placeholder="Two Day Review Text"
        value=""
      />
      <div
        className="c1"
        id="tw-question-ErrorDescription"
      />
    </div>
    <div
      className="c4"
    >
      <label>
        <input
          aria-describedby="tw-correct-ErrorDescription"
          checked={true}
          name="tw.correct"
          onBlur={[Function]}
          onChange={[Function]}
          type="radio"
          value={0}
        />
        <input
          name="tw.choices[0].text"
          onChange={[Function]}
          placeholder="Answer 1"
          type="text"
          value=""
        />
        <div
          className="c1"
          id="tw-choices[0].text-ErrorDescription"
        />
      </label>
      <label>
        <input
          aria-describedby="tw-correct-ErrorDescription"
          checked={false}
          name="tw.correct"
          onBlur={[Function]}
          onChange={[Function]}
          type="radio"
          value={1}
        />
        <input
          name="tw.choices[1].text"
          onChange={[Function]}
          placeholder="Answer 2"
          type="text"
          value=""
        />
        <div
          className="c1"
          id="tw-choices[1].text-ErrorDescription"
        />
      </label>
      <label>
        <input
          aria-describedby="tw-correct-ErrorDescription"
          checked={false}
          name="tw.correct"
          onBlur={[Function]}
          onChange={[Function]}
          type="radio"
          value={2}
        />
        <input
          name="tw.choices[2].text"
          onChange={[Function]}
          placeholder="Answer 3"
          type="text"
          value=""
        />
        <div
          className="c1"
          id="tw-choices[2].text-ErrorDescription"
        />
      </label>
      <label>
        <input
          aria-describedby="tw-correct-ErrorDescription"
          checked={false}
          name="tw.correct"
          onBlur={[Function]}
          onChange={[Function]}
          type="radio"
          value={3}
        />
        <input
          name="tw.choices[3].text"
          onChange={[Function]}
          placeholder="Answer 4"
          type="text"
          value=""
        />
        <div
          className="c1"
          id="tw-choices[3].text-ErrorDescription"
        />
      </label>
    </div>
    <div
      className="c1"
      id="tw-correct-ErrorDescription"
    />
  </section>
  <section>
    <div
      className="c0"
    >
      <label
        htmlFor="tm.explanation"
      >
        Two Months - Review Text
      </label>
      <textarea
        aria-describedby="tm-explanation-ErrorDescription"
        className="c3"
        name="tm.explanation"
        onChange={[Function]}
        placeholder="Two Day Review Text"
        value=""
      />
      <div
        className="c1"
        id="tm-explanation-ErrorDescription"
      />
    </div>
    <div
      className="c0"
    >
      <label
        htmlFor="tm.question"
      >
        Two Months - Review Question
      </label>
      <textarea
        aria-describedby="tm-question-ErrorDescription"
        className="c3"
        name="tm.question"
        onChange={[Function]}
        placeholder="Two Day Review Text"
        value=""
      />
      <div
        className="c1"
        id="tm-question-ErrorDescription"
      />
    </div>
    <div
      className="c4"
    >
      <label>
        <input
          aria-describedby="tm-correct-ErrorDescription"
          checked={true}
          name="tm.correct"
          onBlur={[Function]}
          onChange={[Function]}
          type="radio"
          value={0}
        />
        <input
          name="tm.choices[0].text"
          onChange={[Function]}
          placeholder="Answer 1"
          type="text"
          value=""
        />
        <div
          className="c1"
          id="tm-choices[0].text-ErrorDescription"
        />
      </label>
      <label>
        <input
          aria-describedby="tm-correct-ErrorDescription"
          checked={false}
          name="tm.correct"
          onBlur={[Function]}
          onChange={[Function]}
          type="radio"
          value={1}
        />
        <input
          name="tm.choices[1].text"
          onChange={[Function]}
          placeholder="Answer 2"
          type="text"
          value=""
        />
        <div
          className="c1"
          id="tm-choices[1].text-ErrorDescription"
        />
      </label>
      <label>
        <input
          aria-describedby="tm-correct-ErrorDescription"
          checked={false}
          name="tm.correct"
          onBlur={[Function]}
          onChange={[Function]}
          type="radio"
          value={2}
        />
        <input
          name="tm.choices[2].text"
          onChange={[Function]}
          placeholder="Answer 3"
          type="text"
          value=""
        />
        <div
          className="c1"
          id="tm-choices[2].text-ErrorDescription"
        />
      </label>
      <label>
        <input
          aria-describedby="tm-correct-ErrorDescription"
          checked={false}
          name="tm.correct"
          onBlur={[Function]}
          onChange={[Function]}
          type="radio"
          value={3}
        />
        <input
          name="tm.choices[3].text"
          onChange={[Function]}
          placeholder="Answer 4"
          type="text"
          value=""
        />
        <div
          className="c1"
          id="tm-choices[3].text-ErrorDescription"
        />
      </label>
    </div>
    <div
      className="c1"
      id="tm-correct-ErrorDescription"
    />
  </section>
  <button
    className="MuiButtonBase-root-27 MuiButton-root-1 MuiButton-contained-12 MuiButton-containedPrimary-13 MuiButton-raised-15 MuiButton-raisedPrimary-16"
    disabled={false}
    onBlur={[Function]}
    onFocus={[Function]}
    onKeyDown={[Function]}
    onKeyUp={[Function]}
    onMouseDown={[Function]}
    onMouseLeave={[Function]}
    onMouseUp={[Function]}
    onTouchEnd={[Function]}
    onTouchMove={[Function]}
    onTouchStart={[Function]}
    style={
      Object {
        "marginBottom": "1rem",
      }
    }
    tabIndex="0"
    type="submit"
  >
    <span
      className="MuiButton-label-2"
    >
      Submit
    </span>
    <span
      className="MuiTouchRipple-root-30"
    />
  </button>
</form>
`;
